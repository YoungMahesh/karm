/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-call */
// import Head from "next/head";
// import Link from "next/link";

import { api } from "~/utils/api";

// export default function Home() {
//   const hello = api.post.hello.useQuery({ text: "from tRPC" });

//   return (
//     <>
//       <Head>
//         <title>Create T3 App</title>
//         <meta name="description" content="Generated by create-t3-app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
//         <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
//           <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
//             Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
//           </h1>
//           <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
//             <Link
//               className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
//               href="https://create.t3.gg/en/usage/first-steps"
//               target="_blank"
//             >
//               <h3 className="text-2xl font-bold">First Steps →</h3>
//               <div className="text-lg">
//                 Just the basics - Everything you need to know to set up your
//                 database and authentication.
//               </div>
//             </Link>
//             <Link
//               className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
//               href="https://create.t3.gg/en/introduction"
//               target="_blank"
//             >
//               <h3 className="text-2xl font-bold">Documentation →</h3>
//               <div className="text-lg">
//                 Learn more about Create T3 App, the libraries it uses, and how
//                 to deploy it.
//               </div>
//             </Link>
//           </div>
//           <p className="text-2xl text-white">
//             {hello.data ? hello.data.greeting : "Loading tRPC query..."}
//           </p>
//         </div>
//       </main>
//     </>
//   );
// }




/* eslint-disable react-hooks/exhaustive-deps */
import { useEffect } from "react";
import { type NextPage } from "next";
import TimersList from "../components/TimersList";
import Layout from "../components/Layout";
import PlusButton from "../components/PlusButton";

import { useAuth } from "@clerk/nextjs";
import Loading from "../components/Loading";
// import { trpc } from "../utils/trpc";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const router = useRouter();
  const { isSignedIn, isLoaded } = useAuth();

  const { refetch } = api.profile.get.useQuery(undefined, { enabled: false });

  useEffect(() => {
    // calling this to register new userId in databae in case of sign-up
    if (isSignedIn) void refetch();
  }, [isSignedIn]);

  useEffect(() => {
    if (isLoaded && !isSignedIn) void router.push("/sign-in");
  }, [isLoaded, isSignedIn]);

  if (!isLoaded) return <Loading />;
  return (
    <Layout title="Timers">
      {isSignedIn ? (
        <>
          <TimersList />
          <PlusButton />
        </>
      ) : (
        <div></div>
      )}
    </Layout>
  );
};

export default Home;
